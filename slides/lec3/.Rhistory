mutate(p_sampled = 30 / n()) |>
sample_n(30) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample by big-market")
}
sample_estimates |>
filter(method == "Stratified random sample") |>
bind_rows(stratified_unequal) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1)
sample_estimates |>
filter(method == "Stratified random sample") |>
bind_rows(stratified_unequal) |>
group_by(method) |>
summarize(se = sd(estimate))
stratified_unequal <- foreach(r = 1:10000, .combine = "rbind") %dopar% {
baseball |>
# 10 big-market teams, 4 players each
# 20 small-market teams, 2 players each
mutate(big_sample = team %in% c(
"N.Y. Yankees","N.Y. Mets",
"L.A. Dodgers","L.A. Angels",
"Boston","Chicago Cubs","Chicago White Sox",
"Philadelphia","San Francisco","Washington"
)) |>
group_by(big_sample) |>
mutate(p_sampled = 30 / n()) |>
sample_n(30) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample by big-market")
}
sample_estimates |>
filter(method == "Stratified random sample") |>
bind_rows(stratified_unequal) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1)
sample_estimates |>
filter(method == "Stratified random sample") |>
bind_rows(stratified_unequal) |>
group_by(method) |>
summarize(se = sd(estimate))
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Distribution of estimates over samples of size 60",
labels = label_dollar()
) +
scale_y_continuous(name = "Count")
ggsave("figures/baseball_sampling.pdf",
height  = 7, width = 5)
ggsave("baseball_sampling.pdf",
height  = 7, width = 5)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count")
ggsave("baseball_sampling.pdf",
height  = 7, width = 5)
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 9.5, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 14, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates <- foreach(r = 1:10000, .combine = "rbind") %dopar% {
simple <- baseball |>
sample_n(60) |>
summarize(estimate = mean(salary)) |>
mutate(method = "Simple random sample\nSample 60 players at random")
stratified <- baseball |>
group_by(team) |>
mutate(p_sampled = 2 / n()) |>
sample_n(2) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample\nSample 2 players in each of the 30 teams")
clustered <- baseball |>
distinct(team) |>
sample_n(4) |>
left_join(baseball,
by = join_by(team)) |>
group_by(team) |>
mutate(p_sampled = 15 / n()) |>
sample_n(15) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Clustered random sample\nSample 4 teams. Sample 15 players per team.")
return(
simple |>
bind_rows(stratified) |>
bind_rows(clustered)
)
}
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
sample_estimates |>
group_by(method) |>
summarize(standard_error = sd(estimate)) |>
ungroup() |>
ggplot(aes(y = method, x = standard_error)) +
geom_point() +
scale_x_continuous(
name = "Standard deviation of estimates\nover repeated samples",
labels = label_dollar()
) +
ylab("Sampling Method")
truth <- baseball |> summarize(salary = mean(salary)) |> pull(salary)
truth
sample_estimates |>
group_by(method) |>
mutate(squared_error = (estimate - truth) ^ 2) |>
summarize(mse = mean(squared_error),
mse_se = sd(squared_error) / sqrt(n())) |>
ggplot(aes(x = method, y = mse,
ymin = mse - qnorm(.975) * mse_se,
ymax = mse + qnorm(.975) * mse_se)) +
geom_point() +
geom_errorbar()
forplot <- sample_estimates |>
group_by(method) |>
mutate(squared_error = (estimate - truth) ^ 2) |>
summarize(mse = mean(squared_error),
mse_se = sd(squared_error) / sqrt(n()))
sample_estimates |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "value")
sample_estimates |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method))
sample_estimates |>
mutate(rep = rep(1:n() / 3), each = 3) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate")
sample_estimates |>
mutate(rep = rep(1:n() / 3, each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate")
sample_estimates |>
mutate(rep = rep(1:(n() / 3), each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate")
sample_estimates |>
mutate(rep = rep(1:(n() / 3), each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate") |>
mutate(difference = simple - stratified) |>
summarize(estimate = mean(difference),
se = sd(difference) / sqrt(n())) |>
mutate(ci_min = estimate - qnorm(.975) * se,
ci_max = estimate + qnorm(.975) * se)
sample_estimates |>
mutate(rep = rep(1:(n() / 3), each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate") |>
mutate(difference = (simple - truth) ^ 2 - (stratified - truth) ^ 2) |>
summarize(estimate = mean(difference),
se = sd(difference) / sqrt(n())) |>
mutate(ci_min = estimate - qnorm(.975) * se,
ci_max = estimate + qnorm(.975) * se)
sample_estimates |>
mutate(rep = rep(1:(n() / 3), each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate") |>
mutate(difference = (simple - truth) ^ 2 - (stratified - truth) ^ 2) |>
summarize(estimate = mean(difference),
se = sd(difference) / sqrt(n())) |>
mutate(ci_min = estimate - qnorm(.975) * se,
ci_max = estimate + qnorm(.975) * se) |>
ggplot(aes(x = 1, y = estimate, ymin = ci_min, ymax = ci_max)) +
geom_point() +
geom_errorbar()
sample_estimates |>
mutate(rep = rep(1:(n() / 3), each = 3)) |>
mutate(method = case_when(
grepl("Stratified",method) ~ "stratified",
grepl("Simple",method) ~ "simple"
)) |>
filter(!is.na(method)) |>
pivot_wider(names_from = "method", values_from = "estimate") |>
mutate(difference = (simple - truth) ^ 2 - (stratified - truth) ^ 2) |>
summarize(estimate = mean(difference),
se = sd(difference) / sqrt(n())) |>
mutate(ci_min = estimate - qnorm(.975) * se,
ci_max = estimate + qnorm(.975) * se) |>
ggplot(aes(x = 1, y = estimate, ymin = ci_min, ymax = ci_max)) +
geom_point() +
geom_errorbar() +
geom_hline(yintercept = 0)
sample_estimates |>
group_by(method) |>
mutate(squared_error = (estimate - truth) ^ 2) |>
summarize(mse = mean(squared_error),
mse_se = sd(squared_error) / sqrt(n())) |>
ggplot(aes(x = method, y = mse,
ymin = mse - qnorm(.975) * mse_se,
ymax = mse + qnorm(.975) * mse_se)) +
geom_point() +
geom_errorbar()
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
baseball |> group_by(team) |> summarize(num = n()) |> arrange(num)
# Clustered by team
baseball |>
# Sample teams
distinct(team) |>
sample_n(3) |>
# Merge information on players from those teams
left_join(baseball,
by = join_by(team)) |>
# Sample 15 players per team
group_by(team) |>
mutate(p_sampled = 20 / n()) |>
sample_n(20) |>
# Calculate an estimate
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled))
sample_estimates <- foreach(r = 1:10000, .combine = "rbind") %dopar% {
simple <- baseball |>
sample_n(60) |>
summarize(estimate = mean(salary)) |>
mutate(method = "Simple random sample\nSample 60 players at random")
stratified <- baseball |>
group_by(team) |>
mutate(p_sampled = 2 / n()) |>
sample_n(2) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample\nSample 2 players in each of the 30 teams")
clustered <- baseball |>
distinct(team) |>
sample_n(3) |>
left_join(baseball,
by = join_by(team)) |>
group_by(team) |>
mutate(p_sampled = 20 / n()) |>
sample_n(20) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Clustered random sample\nSample 4 teams, then 15 players per team.")
return(
simple |>
bind_rows(stratified) |>
bind_rows(clustered)
)
}
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
sample_estimates <- foreach(r = 1:10000, .combine = "rbind") %dopar% {
simple <- baseball |>
sample_n(60) |>
summarize(estimate = mean(salary)) |>
mutate(method = "Simple random sample\nSample 60 players at random")
stratified <- baseball |>
group_by(team) |>
mutate(p_sampled = 2 / n()) |>
sample_n(2) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample\nSample 2 players in each of the 30 teams")
clustered <- baseball |>
distinct(team) |>
sample_n(3) |>
left_join(baseball,
by = join_by(team)) |>
group_by(team) |>
mutate(p_sampled = 20 / n()) |>
sample_n(20) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Clustered random sample\nSample 3 teams, then 15 players per team.")
return(
simple |>
bind_rows(stratified) |>
bind_rows(clustered)
)
}
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
sample_estimates <- foreach(r = 1:10000, .combine = "rbind") %dopar% {
simple <- baseball |>
sample_n(60) |>
summarize(estimate = mean(salary)) |>
mutate(method = "Simple random sample\nSample 60 players at random")
stratified <- baseball |>
group_by(team) |>
mutate(p_sampled = 2 / n()) |>
sample_n(2) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Stratified random sample\nSample 2 players in each of the 30 teams")
clustered <- baseball |>
distinct(team) |>
sample_n(3) |>
left_join(baseball,
by = join_by(team)) |>
group_by(team) |>
mutate(p_sampled = 20 / n()) |>
sample_n(20) |>
ungroup() |>
summarize(estimate = weighted.mean(salary, w = 1 / p_sampled)) |>
mutate(method = "Clustered random sample\nSample 3 teams, then 20 players per team.")
return(
simple |>
bind_rows(stratified) |>
bind_rows(clustered)
)
}
truth <- baseball |> summarize(salary = mean(salary)) |> pull(salary)
sample_estimates |>
group_by(method) |>
mutate(squared_error = (estimate - truth) ^ 2) |>
summarize(mse = mean(squared_error),
mse_se = sd(squared_error) / sqrt(n())) |>
ggplot(aes(x = method, y = mse,
ymin = mse - qnorm(.975) * mse_se,
ymax = mse + qnorm(.975) * mse_se)) +
geom_point() +
geom_errorbar()
sample_estimates |>
mutate(method = fct_rev(method)) |>
ggplot(aes(x = estimate)) +
geom_histogram() +
facet_wrap(~ method, ncol = 1) +
geom_vline(
xintercept = baseball |>
summarize(population_mean = mean(salary)) |>
pull(population_mean)
) +
scale_x_continuous(
name = "Average Player Salary\n(Distribution over estimates over samples of size 60)",
labels = label_dollar()
) +
scale_y_continuous(name = "Count") +
theme(plot.margin = unit(c(5.5, 20, 5.5, 5.5), "points"))
ggsave("baseball_sampling.pdf",
height  = 6, width = 5)
