name = "Past Team Win-Loss Record"
)
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot <- function(degree_val) {
fit <- lm(salary ~ splines::bs(record, degree = degree_val, knots = c(.4,.6)),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knots ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
}
make_plot(degree_val = 1)
make_plot(degree_val = 2)
make_plot(degree_val = 3)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr", knots = c(.4,.6)),
data = sample)
library(mgcv)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr", knots = c(.4,.6)),
data = sample)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr", k = c(.4,.6)),
data = sample)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr", knots = c(.4,.6)),
data = sample)
?s
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr", k = 2),
data = sample)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr"),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knots ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr"),
data = population |> sample_n(300))
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr"),
data = population |> sample_n(400))
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr"),
data = population |> sample_n(500))
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
# ILLUSTRATE SPLINES
sample <- population |>
sample_n(30)
knot_values <- c(.4,.6)
to_predict <- tibble(
record = c(knots,seq(.34,.68,.01))
)
make_plot <- function(degree_val) {
fit <- lm(salary ~ splines::bs(record, degree = degree_val, knots = knot_values),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knot_values ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
}
make_plot(degree_val = 1)
knot_values <- c(.4,.5,.6)
to_predict <- tibble(
record = c(knots,seq(.34,.68,.01))
)
make_plot <- function(degree_val) {
fit <- lm(salary ~ splines::bs(record, degree = degree_val, knots = knot_values),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knot_values ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
}
make_plot(degree_val = 1)
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 2)
make_plot(degree_val = 3)
# ILLUSTRATE SPLINES
set.seed(14853)
sample <- population |>
sample_n(100)
knot_values <- c(.4,.6)
to_predict <- tibble(
record = c(knots,seq(.34,.68,.01))
)
make_plot <- function(degree_val) {
fit <- lm(salary ~ splines::bs(record, degree = degree_val, knots = knot_values),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knot_values ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
}
make_plot(degree_val = 1)
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 2)
make_plot(degree_val = 3)
# Combine with penalized regression
fit <- gam(salary ~ s(record, bs = "cr"),
data = population |> sample_n(500))
make_plot(degree_val = 1)
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 2)
ggsave("quadratic_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 3)
ggsave("cubic_spline.pdf",
height = 2, width = 5)
# ILLUSTRATE SPLINES
set.seed(14850)
sample <- population |>
sample_n(100)
knot_values <- c(.4,.6)
to_predict <- tibble(
record = c(knots,seq(.34,.68,.01))
)
make_plot <- function(degree_val) {
fit <- lm(salary ~ splines::bs(record, degree = degree_val, knots = knot_values),
data = sample)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(x = case_when(record %in% knot_values ~ record))) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
}
make_plot(degree_val = 1)
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 2)
ggsave("quadratic_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 3)
ggsave("cubic_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 1) +
ggtitle("Linear spline")
ggsave("linear_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 2) +
ggtitle("Quadratic spline")
ggsave("quadratic_spline.pdf",
height = 2, width = 5)
make_plot(degree_val = 3) +
ggtitle("Cubic spline")
ggsave("cubic_spline.pdf",
height = 2, width = 5)
fit <- rpart(
salary ~ record,
data = sample
)
# Tree
library(rpart)
fit <- rpart(
salary ~ record,
data = sample
)
to_predict |>
mutate(yhat = predict(
fit,
newdata = to_predict
))
plot_fit(
population |>
mutate(fitted = predict(fit, newdata = population)),
step = T
)
ggsave("decision_tree",
height = 2, width = 5)
ggsave("tree.pdf",
height = 2, width = 5)
to_predict |>
mutate(fitted = predict(fit, newdata = to_predict)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
pop_fit <- lm(salary ~ record, data = population)
population |>
group_by(team, record) |>
summarize(salary = mean(salary)) |>
ggplot(aes(x = record, y = salary)) +
geom_point()
population |>
group_by(team, record, target_subgroup) |>
summarize(salary = mean(salary)) |>
ggplot(aes(x = record, y = salary, color = target_subgroup)) +
geom_point()
population |>
group_by(team, record, target_subgroup) |>
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .data) |>
ggplot(aes(x = record, y = salary, color = target_subgroup)) +
geom_point()
population <- baseball |>
pop_fit <- lm(salary ~ record, data = population)
population |>
group_by(team, record, target_subgroup) |>
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .data)) |>
ggplot(aes(x = record, y = salary, color = target_subgroup)) +
geom_point()
population |>
group_by(team, record, target_subgroup) |>
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .data))
population |>
group_by(team, record, target_subgroup) |>
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .))
population %>%
group_by(team, record, target_subgroup) %>%
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .))
population %>%
group_by(team, record, target_subgroup) %>%
summarize(salary = mean(salary)) %>%
mutate(fitted = predict(pop_fit, newdata = .data))
forplot <- population %>%
group_by(team, record, target_subgroup) %>%
summarize(salary = mean(salary))
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary, color = target_subgroup)) +
geom_point()
forplot <- population %>%
group_by(team, record, target_subgroup) %>%
summarize(salary = mean(salary),.groups = "drop")
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary, color = target_subgroup)) +
geom_point()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted))
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted)) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"L.A. Dodger fielders\n(infield and outfield)","Other MLB players"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted)) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Population Regression")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Population Regression")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
scale_linetype_manual(name = element_blank()) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Population Regression")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
scale_linetype_discrete(name = element_blank()) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Regression\nin Full\nPopulation")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Player Salary This Season",
labels = label_dollar()
) +
scale_linetype_discrete(name = element_blank()) +
theme_classic()
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Regression\nin Full\nPopulation")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Mean Player Salary This Season",
labels = label_dollar()
) +
scale_linetype_discrete(name = element_blank()) +
theme_classic()
ggsave("dodger_model_wrong.pdf",
height = 4, width = 6)
ggsave("dodger_model_wrong.pdf",
height = 2.5, width = 5)
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Regression in\nFull\nPopulation")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Mean Player Salary This Season",
labels = label_dollar()
) +
scale_linetype_discrete(name = element_blank()) +
theme_classic()
ggsave("dodger_model_wrong.pdf",
height = 3, width = 6)
forplot |>
mutate(fitted = predict(pop_fit, newdata = forplot)) |>
ggplot(aes(x = record, y = salary)) +
geom_point(aes(color = target_subgroup)) +
geom_line(aes(y = fitted, linetype = "Regression in\nFull\nPopulation")) +
scale_color_manual(
values = c("lightgray","dodgerblue"),
name = element_blank(),
labels = function(x) ifelse(x,"Dodgers","Other teams"),
) +
scale_x_continuous(
name = "Percent of Games Team Won Last Season",
labels = label_percent()
) +
scale_y_continuous(
name = "Mean Player Salary This Season",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_linetype_discrete(name = element_blank()) +
theme_classic()
ggsave("dodger_model_wrong.pdf",
height = 3, width = 6)
