)
tibble(index = 1:200) |>
mutate(x = sample(-3:3, n(), replace = T))
tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x
)
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd)
))
)
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd))
simulated_data |> summarize(var = var(d*tau))
9.15*2
sqrt(9.15*2)
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
simulated_data
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
Xbar %*% coef(fit_1) - Xbar %*% coef(fit_0)
vcov(fit_1)
dim(Xbar)
Xbar %*% vcov(fit_1) %*% t(Xbar)
t(Xbar) %*% vcov(fit_1) %*% Xbar
t(Xbar) %*% (vcov(fit_1) + vcov(fit_0)) %*% Xbar
simulate <- function() {
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
estimate <- Xbar %*% (
coef(fit_1) - coef(fit_0)
)
se <- sqrt(
t(Xbar) %*% (
vcov(fit_1) + vcov(fit_0)
) %*% Xbar
)
return(tibble(
estimate = estimate, empirical_se = se
))
}
library(tidyverse)
library(foreach)
simulations <- foreach(r = 1:200, .combine = "rbind") %do% {
simulate()
}
simulations
simulate <- function() {
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
estimate <- Xbar %*% (
coef(fit_1) - coef(fit_0)
)
se <- sqrt(
t(Xbar) %*% (
vcov(fit_1) + vcov(fit_0)
) %*% Xbar
)
return(tibble(
estimate = estimate[,1], empirical_se = se[,1]
))
}
simulations <- foreach(r = 1:200, .combine = "rbind") %do% {
simulate()
}
simulations
simulate <- function() {
simulated_data <- tibble(index = 1:200) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
estimate <- Xbar %*% (
coef(fit_1) - coef(fit_0)
)
se <- sqrt(
t(Xbar) %*% (
vcov(fit_1) + vcov(fit_0)
) %*% Xbar
)
return(tibble(
estimate = estimate[,1], analytical_se = se[,1]
))
}
simulations <- foreach(r = 1:200, .combine = "rbind") %do% {
simulate()
}
simulations |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
)
simulations <- foreach(r = 1:2000, .combine = "rbind") %do% {
simulate()
}
simulations |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
)
simulate <- function(n = 200) {
simulated_data <- tibble(index = 1:n) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
estimate <- Xbar %*% (
coef(fit_1) - coef(fit_0)
)
se <- sqrt(
t(Xbar) %*% (
vcov(fit_1) + vcov(fit_0)
) %*% Xbar
)
return(tibble(
estimate = estimate[,1], analytical_se = se[,1]
))
}
simulations <- foreach(r = 1:2000, .combine = "rbind") %do% {
simulate(n = 1000)
}
simulations |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
)
simulate <- function(n = 200) {
simulated_data <- tibble(index = 1:n) |>
mutate(
x = sample(-3:3, n(), replace = T),
pd = case_when(x %in% (-3:-1) ~ .1,
x %in% 0:3 ~ .5),
tau = 3 * x,
d = rbinom(n(), 1, pd),
y = rnorm(n(), mean = d * tau, sd = 4)
)
fit_0 <- lm(y ~ x, data = simulated_data |> filter(d == 0))
fit_1 <- lm(y ~ x, data = simulated_data |> filter(d == 1))
full_data_X <- model.matrix(~x, data = simulated_data)
Xbar <- colMeans(full_data_X)
estimate <- Xbar %*% (
coef(fit_1) - coef(fit_0)
)
se <- sqrt(
t(Xbar) %*% (
vcov(fit_1) + vcov(fit_0)
) %*% Xbar
)
return(tibble(
estimate = estimate[,1], analytical_se = se[,1], n = n
))
}
simulations <- foreach(n_val = c(200,1000,2000,10000), .combine = "rbind") %do% {
foreach(r = 1:200, .combine = "rbind") %do% {
simulate(n = n_val)
}
}
simulations |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
)
simulations |>
group_by(n) |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
)
simulations |>
group_by(n) |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
) |>
mutate(ratio = avg_analytical_se / empirical_se)
simulations <- foreach(n_val = c(200,1000,2000,10000), .combine = "rbind") %do% {
foreach(r = 1:2000, .combine = "rbind") %do% {
simulate(n = n_val)
}
}
simulations |>
group_by(n) |>
summarize(
bias = mean(estimate),
avg_analytical_se = mean(analytical_se),
empirical_se = sd(estimate)
) |>
mutate(ratio = avg_analytical_se / empirical_se)
library(tidyverse)
library(lme4)
simulat_data <- function(n_per_group) {
tibble(group = rep(1:5, each = n_per_group)) |>
mutate(y = rnorm(n(), mean = group))
}
simulate_data <- function(n_per_group) {
tibble(group = rep(1:5, each = n_per_group)) |>
mutate(y = rnorm(n(), mean = group))
}
data <- simulate_data(n_per_group = 3) |> print()
data <- simulate_data(n_per_group = 2) |> print()
fixed_effects <- coef(~-1 + factor(group), data = data)
fixed_effects
fixed_effects <- coef(lm(~-1 + factor(group), data = data))
lm(~-1 + factor(group), data = data)
fixed_effects <- coef(lm(y ~ -1 + factor(group), data = data))
fixed_effects
lmer(y ~ (1 | group), data = data)
?predict.lmer
random_effects <- lmer(y ~ (1 | group), data = data)
random_effects
predict(random_effects, type = "re")
?predict.lme4
?predict.merMod
names(attr(random_effects))
attr(random_effects)
attr(random_effects,1)
attr(random_effects,2)
temp <- summary(random_effects)
temp$coefficients
predict(random_effects)
to_predict <- tibble(group = 1:5)
to_predict <- tibble(group = 1:5)
to_predict |>
mutate(
fixed = predict(fixed_effects, newdata = to_predict),
random = predict(random_effects, newdata = to_predict)
)
to_predict <- tibble(group = 1:5)
to_predict |>
mutate(
fixed = predict(fixed_effects, newdata = to_predict),
random = predict(random_effects, newdata = to_predict)
)
fixed_effects <- lm(y ~ factor(group), data = data)
random_effects <- lmer(y ~ (1 | group), data = data)
to_predict |>
mutate(
fixed = predict(fixed_effects, newdata = to_predict),
random = predict(random_effects, newdata = to_predict)
)
data <- simulate_data(n_per_group = 100)
fixed_effects <- lm(y ~ factor(group), data = data)
random_effects <- lmer(y ~ (1 | group), data = data)
to_predict <- tibble(group = 1:5)
to_predict |>
mutate(
fixed = predict(fixed_effects, newdata = to_predict),
random = predict(random_effects, newdata = to_predict)
)
library(tidyverse)
gss <- read_csv("https://info3370.github.io/data/gss.csv")
gss
gss |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop))
gss |>
filter(class > 0 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop))
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
scale_x_continuous(
breaks = 1:5,
labels = c("")
)
ss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
scale_x_continuous(
breaks = 1:5,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
)
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
)
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = 0, label = scales::label_percent(prop)), color = "white") +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = 0, label = scales::label_percent()(prop)), color = "white") +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = 0, label = scales::label_percent()(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .02, label = scales::label_percent()(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent()(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent(accuracy = 1)(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent(accuracy = 1)(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion Identifying with Each Class")
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent(accuracy = 1)(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion Identifying with Each Class") +
xlab("Class")
setwd("~/Dropbox/github/info3370/info3370.github.io/assets/code")
ggsave("../../slides/lec8/class.png", height = 3, width = 5)
getwd()
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent(accuracy = 1)(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion Identifying with Each Class") +
xlab("Class")
setwd("~/Dropbox/github/info3370.github.io/code")
ggsave("../slides/lec8/class.png", height = 3, width = 5)
gss |>
filter(class > 0 & class < 5 & wtssall > 0) |>
group_by(class) |>
summarize(prop = sum(wtssall), .groups = "drop") |>
mutate(prop = prop / sum(prop)) |>
ggplot(aes(x = class, y = prop)) +
geom_bar(stat = "identity") +
geom_text(aes(y = .005, label = scales::label_percent(accuracy = 1)(prop)), color = "white",
vjust = 0) +
scale_x_continuous(
breaks = 1:4,
labels = c("Lower\nClass","Working\nClass","Middle\nClass","Upper\nClass")
) +
ylab("Proportion Identifying\nwith Each Class") +
xlab("Class")
ggsave("../slides/lec8/class.png", height = 3, width = 5.5)
