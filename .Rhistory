library(tidyverse)
library(scales)
fit <- lm(salary ~ record, data = sample)
sample |>
mutate(fitted = predict(fit)) |>
ggplot(aes(x = record, y = salary)) +
geom_segment(aes(xend = record, yend = fitted), color = "gray") +
geom_point(data = sample, size = .5) +
geom_line(aes(y = fitted)) +
scale_y_continuous(
name = "Mean Salary on Team",
labels = label_dollar(scale = 1e-6, suffix = "m")
) +
scale_x_continuous(
name = "Past Team Win-Loss Record"
)
library(mgcv)
model <- gam(
salary ~ s(record, bs = "re"),
data = sample
)
to_predict |>
mutate(predicted = predict(model, newdata = to_predict))
library(splines)
to_predict |>
mutate(predicted = predict(model, newdata = to_predict))
library(rpart)
model <- rpart(salary ~ record, data = sample)
to_predict |>
mutate(predicted = predict(model, newdata = to_predict))
population |>
distinct(team, record) |>
mutate(fitted = predict(model)) |>
ggplot(aes(x = record, y = fitted)) +
geom_step() +
geom_point(aes(color = target_subgroup), size = 2) +
scale_color_manual(values = c("black","dodgerblue")) +
theme_classic() +
theme(legend.position = "none") +
scale_y_continuous(
name = "Team Mean Salary",
labels = label_dollar(scale = 1e-6, suffix = "m"),
limits = c(0,10e6)
) +
scale_x_continuous(name = "Past Team Win-Loss Record")
to_predict_all <- population |>
distinct(team, record)
to_predict_all |>
mutate(fitted = predict(model)) |>
ggplot(aes(x = record, y = fitted)) +
geom_step() +
geom_point(aes(color = target_subgroup), size = 2) +
scale_color_manual(values = c("black","dodgerblue")) +
theme_classic() +
theme(legend.position = "none") +
scale_y_continuous(
name = "Team Mean Salary",
labels = label_dollar(scale = 1e-6, suffix = "m"),
limits = c(0,10e6)
) +
scale_x_continuous(name = "Past Team Win-Loss Record")
to_predict_all |>
mutate(fitted = predict(model, newdata = to_predict_all)) |>
ggplot(aes(x = record, y = fitted)) +
geom_step() +
geom_point(aes(color = target_subgroup), size = 2) +
scale_color_manual(values = c("black","dodgerblue")) +
theme_classic() +
theme(legend.position = "none") +
scale_y_continuous(
name = "Team Mean Salary",
labels = label_dollar(scale = 1e-6, suffix = "m"),
limits = c(0,10e6)
) +
scale_x_continuous(name = "Past Team Win-Loss Record")
to_predict_all <- population |>
distinct(team, record, target_subgroup)
to_predict_all |>
mutate(fitted = predict(model, newdata = to_predict_all)) |>
ggplot(aes(x = record, y = fitted)) +
geom_step() +
geom_point(aes(color = target_subgroup), size = 2) +
scale_color_manual(values = c("black","dodgerblue")) +
theme_classic() +
theme(legend.position = "none") +
scale_y_continuous(
name = "Team Mean Salary",
labels = label_dollar(scale = 1e-6, suffix = "m"),
limits = c(0,10e6)
) +
scale_x_continuous(name = "Past Team Win-Loss Record")
model <- lm(
salary ~ bs(record, degree = 1, knots = c(.4,.6)),
data = sample
)
to_predict_all <- population |>
distinct(team, record, target_subgroup)
to_predict_all |>
mutate(fitted = predict(model, newdata = to_predict_all)) |>
ggplot(aes(x = record, y = fitted)) +
geom_line() +
geom_point(aes(color = target_subgroup), size = 2) +
scale_color_manual(values = c("black","dodgerblue")) +
theme_classic() +
theme(legend.position = "none") +
scale_y_continuous(
name = "Team Mean Salary",
labels = label_dollar(scale = 1e-6, suffix = "m"),
limits = c(0,10e6)
) +
scale_x_continuous(name = "Past Team Win-Loss Record")
population <- read_csv("https://info3370.github.io/data/baseball_with_record.csv")
sample <- population |>
group_by(team) |>
sample_n(5) |>
ungroup()
to_predict <- population |>
filter(target_subgroup) |>
distinct(team, record)
model <- lm(salary ~ record, data = sample)
to_predict |>
mutate(predicted = predict(model, newdata = to_predict))
population <- read_csv("https://info3370.github.io/data/baseball_with_record.csv")
population
sample <- population |>
group_by(team) |>
sample_n(5) |>
ungroup()
to_predict <- population |>
filter(target_subgroup) |>
distinct(team, record)
population |>
+     filter(target_subgroup)
population |>
filter(target_subgroup)
population |>
filter(target_subgroup) |>
distinct(team, record)
model <- lm(salary ~ record, data = sample)
summary(model)
to_predict |>
mutate(predicted = predict(model, newdata = to_predict))
setwd("~/Dropbox/info3370_sp24/participation_lecture4")
library(tidyverse)
canvas <- read_csv("2024-02-13T1035_Grades-INFO3370_INFO5371") |>
filter(!is.na(`SIS Login ID`)) |>
select(Student, ID, `SIS User ID`, `SIS Login ID`, `Section`)
canvas <- read_csv("2024-02-13T1035_Grades-INFO3370_INFO5371.csv") |>
filter(!is.na(`SIS Login ID`)) |>
select(Student, ID, `SIS User ID`, `SIS Login ID`, `Section`)
pollev <- read_csv("why-might-we-use-a-model_gradebook_1398352.csv") |>
filter(!is.na(`Email`)) |>
mutate(Email = str_replace_all(Email,"@cornell.edu","")) |>
select(`SIS Login ID` = Email,
Lecture2 = Participation) |>
# Reduce to 5 points
mutate(Lecture2 = Lecture2 * .05)
read_csv("why-might-we-use-a-model_gradebook_1398352.csv")
read_csv("why-might-we-use-a-model_gradebook_1398352.csv") |>
filter(!is.na(`Email`)) |>
mutate(Email = str_replace_all(Email,"@cornell.edu",""))
pollev <- read_csv("why-might-we-use-a-model_gradebook_1398352.csv") |>
filter(!is.na(`Email`)) |>
mutate(Email = str_replace_all(Email,"@cornell.edu","")) |>
select(`SIS Login ID` = Email,
Lecture4 = Participation) |>
# Reduce to 5 points
mutate(Lecture4 = Lecture4 * .05)
pollev
canvas |>
left_join(pollev, by = "SIS Login ID") |>
write_csv("for_upload.csv")
canvas |>
left_join(pollev, by = "SIS Login ID") |>
filter(Lecture4 == 5) |>
count()
for_upload |> select(Name, Lecture4)
canvas |>
left_join(pollev, by = "SIS Login ID") |> filter(is.na(Lecture4))
from_ipums <- read_dta("../data_raw/cps_00088.dta")
library(haven)
from_ipums <- read_dta("../data_raw/cps_00088.dta")
setwd("~/Dropbox/github/info3370.github.io/topics")
from_ipums <- read_dta("../data_raw/cps_00088.dta")
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by actual hours worked last week > 0
mutate(
at_work = case_when(
ahrsworkt > 0 & ahrswork < 999 ~ 1,
ahrsworkt == 0 ~ 0
)
) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = yngch
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by actual hours worked last week > 0
mutate(
at_work = case_when(
ahrsworkt > 0 & ahrsworkt < 999 ~ 1,
ahrsworkt == 0 ~ 0
)
) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = yngch
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
population_means
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by actual hours worked last week > 0
mutate(
at_work = case_when(
ahrsworkt > 0 & ahrsworkt < 999 ~ 1,
ahrsworkt == 0 ~ 0
)
) |>
filter(!is.na(at_work)) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = yngch
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
population_means
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by actual hours worked last week > 0
mutate(
at_work = case_when(
ahrsworkt > 0 & ahrsworkt < 999 ~ 1,
ahrsworkt == 0 ~ 0
)
) |>
filter(!is.na(at_work)) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = as.numeric(yngch)
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
population_means
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp))
summary(population_means$ahrsworkt)
summary(from_ipums$age)
population_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by being in universe for actual hours worked last week
mutate(at_work = ahrsworkt != 999) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = as.numeric(yngch)
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
population_means
population_means |> ggplot(aes(x = child_age, y = at_work, color = sex)) + geom_line()
synthetic <- foreach(i = 1:nrow(population_means), .combine = "rbind") %do% {
draws <- rbinom(100, 1,population_means$at_work[i])
population_means[i,] |>
select(-at_work) |>
bind_cols(tibble(at_work = draws))
}
synthetic
write_csv(synthetic, file = "../data/parents.csv")
library(tidyverse)
library(haven)
set.seed(14850)
# Load data from IPUMS
from_ipums <- read_dta("../data_raw/cps_00088.dta")
# Create population means
parent_means <- from_ipums |>
# Restrict to those with a child in the household
filter(yngch != 99) |>
# Restrict to those whose youngest child is no older than 18
filter(yngch <= 18) |>
# Restrict to those with a spouse
filter(!is.na(sex_sp)) |>
# Determine if they were at work last week
# by being in universe for actual hours worked last week
mutate(at_work = ahrsworkt != 999) |>
# Improve names and labels of predictors
mutate(
sex = as_factor(sex),
child_age = as.numeric(yngch)
) |>
# Select focal variables
select(at_work, child_age, sex, wtfinl) |>
# Take weighted mean within years
group_by(sex, child_age) |>
summarize(
at_work = weighted.mean(at_work, w = wtfinl),
.groups = "drop"
)
write_csv(parent_means, file = "../data/parent_means.csv")
# Create synthetic data
synthetic <- foreach(i = 1:nrow(parent_means), .combine = "rbind") %do% {
draws <- rbinom(100, 1,parent_means$at_work[i])
parent_means[i,] |>
select(-at_work) |>
bind_cols(tibble(at_work = draws))
}
write_csv(synthetic, file = "../data/parents.csv")
parents <- read_csv("../data/parents.csv")
parents
# Create synthetic data
synthetic <- foreach(i = 1:nrow(parent_means), .combine = "rbind") %do% {
draws <- rbinom(100, 1,parent_means$at_work[i])
parent_means[i,] |>
select(-at_work) |>
bind_cols(tibble(at_work = draws))
} |>
filter(child_age != 1)
write_csv(synthetic, file = "../data/parents.csv")
parents <- read_csv("../data/parents.csv")
table(parents$child_age)
parents
parents |>
ggplot(aes(x = child_age, y = at_work)) +
geom_jitter()
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point()
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray", opacity = .2) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold") +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 20) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 16) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 14) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 14=2) +
parents |>
group_by(sex, child_age) |>
summarize(at_work = mean(at_work)) |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 12) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parent_means |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray") +
annotate(geom = "text", x = 1, y = .7, label = "?", color = "white", fontface = "bold", size = 10) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parent_means |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
parent_means |>
ggplot(aes(x = child_age, y = at_work, color = sex)) +
geom_point() +
annotate(geom = "rect", xmin = .5, xmax = 1.5, ymin = -Inf, ymax = Inf, fill = "gray", alpha = .2) +
theme_classic() +
ylab("Proportion At Work Last Week") +
xlab("Age of Youngest Child") +
scale_color_discrete(name = "Sex", labels = str_to_title)
ggsave("exercise_answer.pdf", height = 2, width = 6)
gewtd()
getwd()
ggsave("exercise_answer.pdf", height = 3, width = 6)
